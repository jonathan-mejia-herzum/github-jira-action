"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const nodes_1 = require("./nodes");
const application_card_1 = require("./nodes/application-card");
const block_quote_1 = require("./nodes/block-quote");
const bullet_list_1 = require("./nodes/bullet-list");
const code_block_1 = require("./nodes/code-block");
const decision_list_1 = require("./nodes/decision-list");
const heading_1 = require("./nodes/heading");
const media_group_1 = require("./nodes/media-group");
const ordered_list_1 = require("./nodes/ordered-list");
const panel_1 = require("./nodes/panel");
const paragraph_1 = require("./nodes/paragraph");
const rule_1 = require("./nodes/rule");
const task_list_1 = require("./nodes/task-list");
class Document {
    constructor(attrs = { version: 1 }) {
        this.attrs = attrs;
        this.content = new nodes_1.ContentNode('doc');
    }
    applicationCard(title, text) {
        return this.content.add(new application_card_1.ApplicationCard(title, text));
    }
    blockQuote() {
        return this.content.add(new block_quote_1.BlockQuote());
    }
    bulletList() {
        return this.content.add(new bullet_list_1.BulletList());
    }
    codeBlock(language) {
        return this.content.add(new code_block_1.CodeBlock(language));
    }
    decisionList(localId) {
        return this.content.add(new decision_list_1.DecisionList(localId));
    }
    heading(level) {
        return this.content.add(new heading_1.Heading(level));
    }
    textHeading(level, text) {
        return this.content.add(new heading_1.Heading(level).text(text));
    }
    mediaGroup() {
        return this.content.add(new media_group_1.MediaGroup());
    }
    orderedList() {
        return this.content.add(new ordered_list_1.OrderedList());
    }
    panel(type) {
        return this.content.add(new panel_1.Panel(type));
    }
    paragraph() {
        return this.content.add(new paragraph_1.Paragraph());
    }
    rule() {
        this.content.add(new rule_1.Rule());
        return this;
    }
    taskList(localId) {
        return this.content.add(new task_list_1.TaskList(localId));
    }
    toJSON() {
        return Object.assign({}, this.content.toJSON(), { version: this.attrs.version });
    }
    toString() {
        return JSON.stringify(this);
    }
}
exports.Document = Document;
//# sourceMappingURL=document.js.map